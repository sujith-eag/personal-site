<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Conditionals on Sujith&#39;s Library</title>
    <link>http://localhost:1313/personal-site/docs/java-script/js-language/2-control-flow/conditionals/</link>
    <description>Recent content in Conditionals on Sujith&#39;s Library</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright (c) 2020-2024 Thulite</copyright>
    <lastBuildDate>Thu, 07 Nov 2024 20:48:55 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/personal-site/docs/java-script/js-language/2-control-flow/conditionals/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JS - 02.01 - if, else</title>
      <link>http://localhost:1313/personal-site/docs/java-script/js-language/2-control-flow/conditionals/js-02.01-if-else/</link>
      <pubDate>Thu, 07 Nov 2024 20:46:23 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/java-script/js-language/2-control-flow/conditionals/js-02.01-if-else/</guid>
      <description>&lt;h2 id=&#34;conditional-execution--branching&#34;&gt;&lt;strong&gt;Conditional Execution / Branching&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;if-statement&#34;&gt;&lt;strong&gt;&lt;code&gt;if()&lt;/code&gt; Statement&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;The &lt;code&gt;if&lt;/code&gt; statement allows you to execute a block of code only if a specified condition is true. The condition is typically a Boolean expression that evaluates to either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>JS - 02.02 - switch-case</title>
      <link>http://localhost:1313/personal-site/docs/java-script/js-language/2-control-flow/conditionals/js-02.02-switch-case/</link>
      <pubDate>Thu, 07 Nov 2024 20:47:19 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/java-script/js-language/2-control-flow/conditionals/js-02.02-switch-case/</guid>
      <description>&lt;h2 id=&#34;switch-statements&#34;&gt;&lt;strong&gt;&lt;code&gt;switch&lt;/code&gt; Statements&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;switch&lt;/code&gt; statement is a more concise and readable way to handle multiple conditional checks based on a single value. It is often used as an alternative to multiple &lt;code&gt;if...else if&lt;/code&gt; statements, particularly when you have many conditions to check against a single expression.&lt;/p&gt;</description>
    </item>
    <item>
      <title>JS - 02.03 - Ternary Operator</title>
      <link>http://localhost:1313/personal-site/docs/java-script/js-language/2-control-flow/conditionals/js-02.03-ternary-operator/</link>
      <pubDate>Thu, 07 Nov 2024 20:47:52 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/java-script/js-language/2-control-flow/conditionals/js-02.03-ternary-operator/</guid>
      <description>&lt;h3 id=&#34;ternary-operator--conditional-operator&#34;&gt;&lt;strong&gt;Ternary Operator / Conditional Operator&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;The &lt;code&gt;?&lt;/code&gt; operator is called &amp;ldquo;ternary&amp;rdquo; because it has &lt;strong&gt;three&lt;/strong&gt; operands, making it unique in JavaScript. It&amp;rsquo;s often referred to as the &lt;strong&gt;conditional&lt;/strong&gt; or &lt;strong&gt;question mark&lt;/strong&gt; operator. It provides a shorthand for &lt;code&gt;if-else&lt;/code&gt; statements.&lt;/p&gt;</description>
    </item>
    <item>
      <title>JS - 02.04 - Logical Operators</title>
      <link>http://localhost:1313/personal-site/docs/java-script/js-language/2-control-flow/conditionals/js-02.04-logical-operators/</link>
      <pubDate>Thu, 07 Nov 2024 20:48:21 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/java-script/js-language/2-control-flow/conditionals/js-02.04-logical-operators/</guid>
      <description>&lt;p&gt;Logical operators are used to reason about &lt;strong&gt;Boolean&lt;/strong&gt; values. They can be applied to values of any type, not just Boolean.&#xA;&lt;code&gt;||(OR)  &amp;amp;&amp;amp;(AND)  !(NOT)  ??(Nullish Coalescing)&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>JS - 02.05 - Short Circuiting</title>
      <link>http://localhost:1313/personal-site/docs/java-script/js-language/2-control-flow/conditionals/js-02.05-short-circuiting/</link>
      <pubDate>Thu, 07 Nov 2024 20:48:55 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/java-script/js-language/2-control-flow/conditionals/js-02.05-short-circuiting/</guid>
      <description>&lt;p&gt;Logical operators like &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;??&lt;/code&gt;, and &lt;code&gt;||&lt;/code&gt; handle values of different types in a unique way. They &lt;strong&gt;convert&lt;/strong&gt; the left-hand value to a Boolean to decide how to proceed. These operators might &lt;strong&gt;return&lt;/strong&gt; either the original left-hand value or the right-hand value, based on the evaluation.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
