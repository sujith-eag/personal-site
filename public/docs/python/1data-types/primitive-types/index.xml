<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Primitive Data Types on Sujith&#39;s Library</title>
    <link>http://localhost:1313/personal-site/docs/python/1data-types/primitive-types/</link>
    <description>Recent content in Primitive Data Types on Sujith&#39;s Library</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright (c) 2020-2024 Thulite</copyright>
    <lastBuildDate>Tue, 17 Dec 2024 22:34:58 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/personal-site/docs/python/1data-types/primitive-types/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>01 PDT - 01 Variables</title>
      <link>http://localhost:1313/personal-site/docs/python/1data-types/primitive-types/01-pdt-01-variables/</link>
      <pubDate>Tue, 17 Dec 2024 22:32:32 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/python/1data-types/primitive-types/01-pdt-01-variables/</guid>
      <description>&lt;p&gt;In languages like Java, C, and others, variables are directly tied to memory allocation. A specific memory &amp;ldquo;box&amp;rdquo; is created for the variable, and the value is stored within it. If the value changes, the box is updated with the new value.&lt;br&gt;&#xA;When one variable is assigned to another, the value is copied into a new memory &amp;ldquo;box.&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title>01 PDT - 02 Datatypes</title>
      <link>http://localhost:1313/personal-site/docs/python/1data-types/primitive-types/01-pdt-02-datatypes/</link>
      <pubDate>Tue, 17 Dec 2024 22:33:48 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/python/1data-types/primitive-types/01-pdt-02-datatypes/</guid>
      <description>&lt;p&gt;A &lt;strong&gt;datatype&lt;/strong&gt; represents the type of data stored in a variable or memory location.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Built-in datatypes&lt;/strong&gt;: These are the pre-defined data types provided by Python.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;User-defined datatypes&lt;/strong&gt;: These are custom data types created by programmers.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;built-in-data-types&#34;&gt;Built-in Data Types&lt;/h3&gt;&#xA;&lt;p&gt;The built-in data types in Python can be broadly categorized into:&lt;/p&gt;</description>
    </item>
    <item>
      <title>01 PDT - 03 Operators</title>
      <link>http://localhost:1313/personal-site/docs/python/1data-types/primitive-types/01-pdt-03-operators/</link>
      <pubDate>Tue, 17 Dec 2024 22:33:59 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/python/1data-types/primitive-types/01-pdt-03-operators/</guid>
      <description>&lt;p&gt;An &lt;strong&gt;operator&lt;/strong&gt; is a symbol that performs an operation on one or more operands (variables or values). Operators can be classified based on the number of operands they work with (Unary, Binary and Ternary operator) and their functionality.&lt;/p&gt;</description>
    </item>
    <item>
      <title>01 PDT - 04 int &amp; float</title>
      <link>http://localhost:1313/personal-site/docs/python/1data-types/primitive-types/01-pdt-04-int-float/</link>
      <pubDate>Tue, 17 Dec 2024 22:34:15 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/python/1data-types/primitive-types/01-pdt-04-int-float/</guid>
      <description>&lt;h2 id=&#34;int&#34;&gt;Int&lt;/h2&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;div class=&#34;expressive-code&#34;&gt;&#xD;&#xA;  &lt;figure class=&#34;frame not-content&#34;&gt;&#xD;&#xA;  &lt;figcaption class=&#34;header&#34;&gt;&#xD;&#xA;    &lt;span class=&#34;title&#34;&gt;&lt;/span&gt;&#xD;&#xA;  &lt;/figcaption&gt;&#xD;&#xA;  &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; Â &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;  &lt;/figure&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;p&gt;Making it interactive with &lt;code&gt;input()&lt;/code&gt;&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;div class=&#34;expressive-code&#34;&gt;&#xD;&#xA;  &lt;figure class=&#34;frame not-content&#34;&gt;&#xD;&#xA;  &lt;figcaption class=&#34;header&#34;&gt;&#xD;&#xA;    &lt;span class=&#34;title&#34;&gt;&lt;/span&gt;&#xD;&#xA;  &lt;/figcaption&gt;&#xD;&#xA;  &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;whats x? &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;whats y? &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;  &lt;/figure&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;p&gt;Any input from keyboard is treated as a string.&#xA;For input 2 and 2, output will be 22 as + is concatenating both numbers because they are treated as strings.&lt;/p&gt;</description>
    </item>
    <item>
      <title>01 PDT - 05 String Manipulation</title>
      <link>http://localhost:1313/personal-site/docs/python/1data-types/primitive-types/01-pdt-05-string-manipulation/</link>
      <pubDate>Tue, 17 Dec 2024 22:34:58 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/python/1data-types/primitive-types/01-pdt-05-string-manipulation/</guid>
      <description>&lt;p&gt;The &lt;code&gt;str&lt;/code&gt; datatype represents a &lt;strong&gt;string&lt;/strong&gt;, which is a sequence of characters. Strings in Python are enclosed in &lt;strong&gt;single quotes&lt;/strong&gt; (&lt;code&gt;&#39;&lt;/code&gt;), &lt;strong&gt;double quotes&lt;/strong&gt; (&lt;code&gt;&amp;quot;&lt;/code&gt;), or &lt;strong&gt;triple quotes&lt;/strong&gt; (&lt;code&gt;&#39;&#39;&#39;&lt;/code&gt; or &lt;code&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/code&gt;) for multi-line strings.&lt;/p&gt;</description>
    </item>
    <item>
      <title>01 PDT - 06 String Methods</title>
      <link>http://localhost:1313/personal-site/docs/python/1data-types/primitive-types/01-pdt-06-string-methods/</link>
      <pubDate>Tue, 17 Dec 2024 22:34:58 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/python/1data-types/primitive-types/01-pdt-06-string-methods/</guid>
      <description>&lt;p&gt;Method is a function that is built into a function used to perform actions on a piece of data.&#xA;They are followed by a &lt;code&gt;()&lt;/code&gt; parenthesis, as they may need additional data to work.  (need to check documentation for more)&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
