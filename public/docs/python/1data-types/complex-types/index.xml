<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Complex Types on Sujith&#39;s Library</title>
    <link>http://localhost:1313/personal-site/docs/python/1data-types/complex-types/</link>
    <description>Recent content in Complex Types on Sujith&#39;s Library</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright (c) 2020-2024 Thulite</copyright>
    <lastBuildDate>Tue, 17 Dec 2024 22:47:04 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/personal-site/docs/python/1data-types/complex-types/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lists</title>
      <link>http://localhost:1313/personal-site/docs/python/1data-types/complex-types/lists/</link>
      <pubDate>Tue, 17 Dec 2024 22:45:42 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/python/1data-types/complex-types/lists/</guid>
      <description>&lt;h2 id=&#34;lists-linked-lists&#34;&gt;Lists (Linked Lists)&lt;/h2&gt;&#xA;&lt;p&gt;Lists are collection of items in a particular order, it allows storing information in one place.&#xA;Better to make their name plural as they contain more than one item.&#xA;Printing a list returns even &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;,&#39;&#39;,&#39;&#39;,&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>List Methods</title>
      <link>http://localhost:1313/personal-site/docs/python/1data-types/complex-types/list-methods/</link>
      <pubDate>Tue, 17 Dec 2024 22:46:00 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/python/1data-types/complex-types/list-methods/</guid>
      <description>&lt;p&gt;Simple statistics with List of numbers&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;div class=&#34;expressive-code&#34;&gt;&#xD;&#xA;  &lt;figure class=&#34;frame not-content&#34;&gt;&#xD;&#xA;  &lt;figcaption class=&#34;header&#34;&gt;&#xD;&#xA;    &lt;span class=&#34;title&#34;&gt;&lt;/span&gt;&#xD;&#xA;  &lt;/figcaption&gt;&#xD;&#xA;  &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;digits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;36&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;49&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;digits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;     &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;digits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;     &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;digits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;  &lt;/figure&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;h2 id=&#34;range&#34;&gt;range&lt;/h2&gt;&#xA;&lt;p&gt;range from 0 to &lt;code&gt;len(l)&lt;/code&gt;&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;div class=&#34;expressive-code&#34;&gt;&#xD;&#xA;  &lt;figure class=&#34;frame not-content&#34;&gt;&#xD;&#xA;  &lt;figcaption class=&#34;header&#34;&gt;&#xD;&#xA;    &lt;span class=&#34;title&#34;&gt;&lt;/span&gt;&#xD;&#xA;  &lt;/figcaption&gt;&#xD;&#xA;  &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# produces sequence i, i+1, ..., j-1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;# is like slice(:j) automatically starts from 0, till j-1  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;  &lt;/figure&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;p&gt;&lt;code&gt;range()&lt;/code&gt; has a third argument which is increment, default will be +1  &lt;/p&gt;</description>
    </item>
    <item>
      <title>List Operators</title>
      <link>http://localhost:1313/personal-site/docs/python/1data-types/complex-types/list-operators/</link>
      <pubDate>Tue, 17 Dec 2024 22:46:17 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/python/1data-types/complex-types/list-operators/</guid>
      <description>&lt;h2 id=&#34;operations-on-lists&#34;&gt;Operations on lists&lt;/h2&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;div class=&#34;expressive-code&#34;&gt;&#xD;&#xA;  &lt;figure class=&#34;frame not-content&#34;&gt;&#xD;&#xA;  &lt;figcaption class=&#34;header&#34;&gt;&#xD;&#xA;    &lt;span class=&#34;title&#34;&gt;&lt;/span&gt;&#xD;&#xA;  &lt;/figcaption&gt;&#xD;&#xA;  &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;applylist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;  &lt;/figure&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;h3 id=&#34;map-&#34;&gt;&lt;code&gt;map( )&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Built in function to apply something to all the elements of &lt;code&gt;l&lt;/code&gt;.&#xA;&lt;code&gt;map(f, l)&lt;/code&gt; applies &lt;code&gt;f&lt;/code&gt; to each element of &lt;code&gt;l&lt;/code&gt; (entire list)&#xA;output of &lt;code&gt;map(f, l)&lt;/code&gt; is not a list but a sequence like &lt;code&gt;range(i, j)&lt;/code&gt; and &lt;code&gt;dict.keys( )&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arrays</title>
      <link>http://localhost:1313/personal-site/docs/python/1data-types/complex-types/arrays/</link>
      <pubDate>Tue, 17 Dec 2024 22:46:32 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/python/1data-types/complex-types/arrays/</guid>
      <description>&lt;h2 id=&#34;arrays&#34;&gt;Arrays&lt;/h2&gt;&#xA;&lt;p&gt;They are a single block of memory, continuous without any gap in between.&#xA;Elements are of same type, present in a sequence.&#xA;The size of an array is also fixed in advance.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tuples</title>
      <link>http://localhost:1313/personal-site/docs/python/1data-types/complex-types/tuples/</link>
      <pubDate>Tue, 17 Dec 2024 22:46:50 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/python/1data-types/complex-types/tuples/</guid>
      <description>&lt;p&gt;&lt;code&gt;tuple( )&lt;/code&gt;&#xA;can be a string of values&#xA;It behaves like a list or string, can extract values.&lt;/p&gt;&#xA;&lt;p&gt;Used as simultaneous assignments&lt;br&gt;&#xA;&lt;code&gt;(age, name, primes) = ( 23, &amp;quot;Kamal&amp;quot;, [2, 3, 5, 7] )&lt;/code&gt;&#xA; &#xA; can assign a &amp;ldquo;tuple&amp;rdquo; of values to a name (similar to a list of values)&lt;br&gt;&#xA; &lt;code&gt;point = (3.5,  4.8)&lt;/code&gt;&#xA;&lt;code&gt;date = (16,7,2023)&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dictinaries</title>
      <link>http://localhost:1313/personal-site/docs/python/1data-types/complex-types/dictinaries/</link>
      <pubDate>Tue, 17 Dec 2024 22:47:04 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/python/1data-types/complex-types/dictinaries/</guid>
      <description>&lt;p&gt;Dictionary is a collection of key-value pairs. each key is connected to a value, and key can be used to access a value.&#xA;It is wrapped in &lt;code&gt;{}&lt;/code&gt; ,  key connected to value by &lt;code&gt;:&lt;/code&gt; , and each key-value pair is separated by &lt;code&gt;,&lt;/code&gt;&#xA;&lt;code&gt;a = {&amp;quot;colour&amp;quot; : &amp;quot;green&amp;quot;, &amp;quot;points&amp;quot; : 5 }&lt;/code&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
