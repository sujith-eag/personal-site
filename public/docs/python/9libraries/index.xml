<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Using Libraries in Python on Sujith&#39;s Library</title>
    <link>http://localhost:1313/personal-site/docs/python/9libraries/</link>
    <description>Recent content in Using Libraries in Python on Sujith&#39;s Library</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright (c) 2020-2024 Thulite</copyright>
    <lastBuildDate>Wed, 12 Feb 2025 00:04:42 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/personal-site/docs/python/9libraries/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>09 Packages - 01 Random and Statistics (Basics)</title>
      <link>http://localhost:1313/personal-site/docs/python/9libraries/09-packages-01-random-and-statistics-basics/</link>
      <pubDate>Wed, 12 Feb 2025 00:02:40 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/python/9libraries/09-packages-01-random-and-statistics-basics/</guid>
      <description>&lt;p&gt;In Python, &lt;strong&gt;modules&lt;/strong&gt; are files(&lt;code&gt;.py&lt;/code&gt;) containing Python code—functions, classes, and variables—that you can import and use in your programs. Modules help organize code, avoid repetition, and improve structure and readability. You can use built-in Python modules or create your own custom ones to save time by reusing code across different projects.&lt;/p&gt;</description>
    </item>
    <item>
      <title>09 Packages - 02 Sys Library</title>
      <link>http://localhost:1313/personal-site/docs/python/9libraries/09-packages-02-sys-library/</link>
      <pubDate>Wed, 12 Feb 2025 00:03:07 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/python/9libraries/09-packages-02-sys-library/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Command-line arguments&lt;/strong&gt; allow users to provide input to a program at the time of execution, without the need for interactive prompts. These arguments are passed directly in the terminal (or command prompt) when the script is executed. This allows programs to be more dynamic and flexible, acting based on the input provided at runtime.&lt;/p&gt;</description>
    </item>
    <item>
      <title>09 Packages - 03 Working with 3rd Party Libraries</title>
      <link>http://localhost:1313/personal-site/docs/python/9libraries/09-packages-03-working-with-3rd-party-libraries/</link>
      <pubDate>Wed, 12 Feb 2025 00:04:42 +0530</pubDate>
      <guid>http://localhost:1313/personal-site/docs/python/9libraries/09-packages-03-working-with-3rd-party-libraries/</guid>
      <description>&lt;p&gt;In Python, you can extend your program’s functionality by utilizing &lt;strong&gt;third-party libraries&lt;/strong&gt; (also called &lt;strong&gt;packages&lt;/strong&gt;). These are pre-written code libraries that provide useful functions for common tasks. By using these packages, you can save time and avoid reinventing the wheel.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
